#!/bin/bash
#
# Main script to download, import and export cell tower databases
# from OpenCellID & Mozilla Location Service.
#
# You need to set API_KEY to an OpenCellID API key before downloading.
#
# Licensed under GPLv3 or later
# (c)2015 wvengen & n76

PREFIX=`dirname $0`
source "$PREFIX/lib/config"
source "$PREFIX/lib/util"
source "$PREFIX/lib/download"
source "$PREFIX/lib/process"
source "$PREFIX/lib/push"

help() {
  cat "$PREFIX/misc/usage.txt"
  exit
}

# Variables first so that settings could override them, even though this is
# unsupported because they may change in future versions.
MCC=
QUIET=
ACTIONS=
FILTER="1=1"

# Read default configuration files, then those specified on the command-line.
config_default "$PREFIX"
config_from_options $@

# Parse command-line arguments (after settings so they can be overridden).
ARGS=$(getopt -o dic::mpeC:hq -l "download,import,filter-mcc::,merge,push,push-now,export,config:,help,quiet" -n `basename $0` -- "$@")
eval set -- "$ARGS"

while true; do
  case "$1" in
    -d|--download)
      ACTIONS="$ACTIONS download"
      shift
      ;;
    -i|--import)
      ACTIONS="$ACTIONS import"
      shift
      ;;
    -c|--filter-mcc)
      ACTIONS="$ACTIONS filter"
      [ "$2" ] && MCC="$2"
      shift 2
      ;;
    -m|--merge)
      ACTIONS="$ACTIONS combine"
      shift
      ;;
    -p|--push)
      ACTIONS="$ACTIONS pushask"
      shift
      ;;
    --push-now)
      ACTIONS="$ACTIONS pushnow"
      shift
      ;;
    -e|--export)
      ACTIONS="$ACTIONS export"
      shift
      ;;
    -C|--config)
      # already handled in first pass
      shift 2
      ;;
    -h|--help)
      help
      shift
      ;;
    -q|--quiet)
      QUIET=1
      shift
      ;;
    --)
      shift
      break
      ;;
  esac
done

# Pre-process variables

if [ "$MCC" ]; then
  FILTER="$FILTER AND mcc IN ($MCC)"
fi

# Check actions

if [ -z "$ACTIONS" ]; then
  error "Nothing to do, please supply an action."
  help
fi

if [[ "$ACTIONS" =~ filter ]] && [ ! "$MCC" ]; then
  echo "Please give one or more MCCs to filter." 1>&2
  exit 1
fi

# Execute actions

[[ "$ACTIONS" =~ download ]] && download
if echo "$ACTIONS" | grep -q 'import\|filter\|combine\|export'; then
  process "$ACTIONS"
fi

if [[ "$ACTIONS" =~ pushask ]]; then
  lacells_push_ask
else
  [[ "$ACTIONS" =~ pushnow ]] && lacells_push_now
fi
